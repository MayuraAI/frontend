# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - Mayura

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || vars.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || vars.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_BACKEND_URL: ${{ secrets.NEXT_PUBLIC_BACKEND_URL || vars.NEXT_PUBLIC_BACKEND_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          VALIDATE_TOKEN_IN_PROXY: ${{ vars.VALIDATE_TOKEN_IN_PROXY || 'false' }}
          EDGE_CONFIG: ${{ secrets.EDGE_CONFIG }}
          ANALYZE: ${{ vars.ANALYZE || 'false' }}

      - name: Create deployment package
        run: |
          echo "Creating deployment package..."
          mkdir -p deployment
          
          # Copy standalone build output
          if [ -d ".next/standalone" ]; then
            echo "Copying standalone build..."
            cp -r .next/standalone/* deployment/
          else
            echo "No standalone build found, copying regular build..."
            cp -r .next deployment/
          fi
          
          # Copy static files
          if [ -d ".next/static" ]; then
            echo "Copying static files..."
            mkdir -p deployment/.next
            cp -r .next/static deployment/.next/static
          fi
          
          # Copy public assets
          if [ -d "public" ]; then
            echo "Copying public assets..."
            cp -r public deployment/public
          fi
          
          # Copy necessary config files
          cp package.json deployment/
          cp pnpm-lock.yaml deployment/
          
          # Copy web.config if it exists
          if [ -f "web.config" ]; then
            cp web.config deployment/
          fi

      - name: Zip artifact for deployment
        run: |
          cd deployment
          zip -r ../release.zip ./*
          cd ..
          echo "Artifact size: $(du -h release.zip)"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: |
          echo "Extracting deployment package..."
          unzip -q release.zip
          echo "Extracted files:"
          ls -la
      
      - name: Login to Azure CLI
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_981BFD612F8E43748E49C32364800263 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_911D586BA66F4744BC6E08C866BB698F }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8D2E084D1BD146799188061D345C560E }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'Mayura'
          slot-name: 'Production'
          package: .
